# .github/workflows/tests.yaml
name: Run Tests

on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
      - 'hotfix/**'
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false # Allow all matrix jobs to finish
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12','3.13']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          # Install project deps including 'dev' group for testing tools
          poetry install --no-interaction --no-ansi --with dev

      - name: Run linters and formatters (Check only)
        run: |
          poetry run autoflake --remove-all-unused-imports --check --recursive .
          poetry run isort --check --profile black .
          poetry run black --check .
          poetry run flake8 .
          poetry run mypy .

      - name: Run tests with coverage for apiconfig
        env:
          ONEFLOW_API_KEY: ${{ secrets.ONEFLOW_API_KEY }}
          ONEFLOW_USER_EMAIL: ${{ secrets.ONEFLOW_USER_EMAIL }}
          FIKEN_ACCESS_TOKEN: ${{ secrets.FIKEN_ACCESS_TOKEN }}
          TRIPLETEX_TEST_CONSUMER_NAME: ${{ secrets.TRIPLETEX_TEST_CONSUMER_NAME }}
          TRIPLETEX_TEST_CONSUMER_TOKEN: ${{ secrets.TRIPLETEX_TEST_CONSUMER_TOKEN }}
          TRIPLETEX_TEST_EMPLOYEE_TOKEN: ${{ secrets.TRIPLETEX_TEST_EMPLOYEE_TOKEN }}
          # Add other secrets if needed for tests
        run: |
          poetry run pytest --cov=apiconfig tests/
