from typing import Any, Iterable, List, Mapping, Pattern, Tuple, Protocol

from werkzeug.wrappers import Response

class _HeaderMapping(Protocol):
    def items(self) -> Iterable[tuple[str, str]]: ...

class _ArgsMapping(Protocol):
    def items(self) -> Iterable[tuple[str, str]]: ...

class Request(Protocol):
    headers: _HeaderMapping
    args: _ArgsMapping

class RequestHandler:
    def respond_with_json(self, obj: Any, *, status: int = ..., headers: Mapping[str, str] | None = ...) -> None: ...
    def respond_with_response(self, response: Response, **kwargs: Any) -> None: ...

class HTTPServer:
    log: List[Tuple[Request, Response]]
    def expect_request(self, *args: Any, ordered: bool = ..., **kwargs: Any) -> RequestHandler: ...
    def expect_ordered_request(self, *args: Any, **kwargs: Any) -> RequestHandler: ...
    def url_for(self, path: str) -> str: ...
